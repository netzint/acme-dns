.PHONY: build build-ui build-all run run-ui run-all clean docker-build docker-build-ui docker-build-all help

# Variables
BINARY_NAME=acme-dns
UI_DIR=ui
DOCKER_REGISTRY=ghcr.io/netzint
SERVER_IMAGE=$(DOCKER_REGISTRY)/acme-dns
UI_IMAGE=$(DOCKER_REGISTRY)/acme-dns-ui
TAG=latest

## help: Show this help message
help:
	@echo 'Usage:'
	@sed -n 's/^##//p' ${MAKEFILE_LIST} | column -t -s ':' | sed -e 's/^/ /'

## build: Build acme-dns server
build:
	go build -o $(BINARY_NAME) .

## build-ui: Build UI for production
build-ui:
	cd $(UI_DIR) && npm install && npm run build

## build-all: Build both server and UI
build-all: build build-ui

## run: Run acme-dns server locally
run:
	./$(BINARY_NAME) -c config.cfg

## run-ui: Run UI development server
run-ui:
	cd $(UI_DIR) && npm start

## run-all: Run both services with docker-compose
run-all:
	docker-compose -f docker-compose.all.yml up

## docker-build: Build server Docker image
docker-build:
	docker build -t $(SERVER_IMAGE):$(TAG) .

## docker-build-ui: Build UI Docker image
docker-build-ui:
	docker build -t $(UI_IMAGE):$(TAG) ./$(UI_DIR)

## docker-build-all: Build all Docker images
docker-build-all: docker-build docker-build-ui

## docker-push: Push server image to registry
docker-push:
	docker push $(SERVER_IMAGE):$(TAG)

## docker-push-ui: Push UI image to registry
docker-push-ui:
	docker push $(UI_IMAGE):$(TAG)

## docker-push-all: Push all images to registry
docker-push-all: docker-push docker-push-ui

## docker-run: Run with docker-compose
docker-run:
	docker-compose -f docker-compose.all.yml up -d

## docker-stop: Stop docker-compose services
docker-stop:
	docker-compose -f docker-compose.all.yml down

## docker-logs: Show docker-compose logs
docker-logs:
	docker-compose -f docker-compose.all.yml logs -f

## test: Run tests
test:
	go test -v ./...

## test-ui: Run UI tests
test-ui:
	cd $(UI_DIR) && npm test

## clean: Clean build artifacts
clean:
	rm -f $(BINARY_NAME)
	rm -rf $(UI_DIR)/dist
	docker-compose -f docker-compose.all.yml down -v

## update-deps: Update all dependencies
update-deps:
	go get -u ./...
	go mod tidy
	cd $(UI_DIR) && npm update

## dev: Start development environment
dev:
	docker-compose -f docker-compose.all.yml up acme-dns -d
	cd $(UI_DIR) && npm start